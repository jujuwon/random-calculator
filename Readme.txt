1. 조 이름, 조원, 역할
 - 조 이름
  - 데이터 통신 과제 17조
  
 - 조원 및 역할
  - 이주원 (20183085) : 서버 구현, 프로그램 설계, 텍스트 파일 수정
  - 윤태현 (20193075) : 클라이언트 구현, 영상 촬영, 텍스트 파일 정리

2. 프로그램 구성요소 설명
 - server (java로 작성)
  - 시스템 클락 객체를 관리하며, 클라이언트 4개가 연결되면 동작을 시작합니다.
  - 시스템 클락이 10분이 될 때까지 클라이언트에게 문제를 주고 클라이언트의 연산 결과를 받습니다.
  - 시스템 클락이 10분이 되면, 클라이언트에게 타임아웃 메시지를 보내고, 누적 합계를 출력한 뒤 서버를 종료합니다.

 - client (c로 작성)
  - 서버와 연결하여, 서버에서 주는 문제를 연산하여 결과를 보냅니다.
  - 프로그램 실행 시 입력받은 클라이언트 아이디값을 참고하여 로그 파일을 만듭니다.
  - 서버로부터 타임아웃이라는 메시지를 전달받으면 서버와의 연결을 종료합니다.
  - client.c에서 사용되는 함수는 client_func.h에 구현하였습니다.

3. 소스코드 컴파일 방법 명시
 - server : 프로그램 실행 방법에 명시되어 있는대로 실행시키면 됩니다.
 - client : gcc -o client.exe client.c -lws2_32

4. 프로그램 실행환경 및 실행 방법
 - 프로그램 실행 환경
   - OS : 윈도우
   - 서버 : PuTTY
   - 클라이언트 : cmd OR powershell

 - 프로그램 실행 방법
  - server : ./server/run.sh
  - client : ./client.exe ${client_id}
   ex) ./client.exe 1

5. Error or Additional Message Handling
 - 서버에서는 프로그램 동작 중 발생할 에러에 대해서는 예외처리를 해두었습니다.
  클라이언트에서는 소켓 연결 과정에서 발생하는 에러는 에러 원인을 출력하고 프로그램을 강제 종료 시키도록 했습니다.

6. Additional Comments
 - 서버 로그 파일은 기존에 작성되어 있는 내용에 이어서 작성되기 때문에,
  프로그램 실행마다 로그 파일의 내용을 삭제해주셔야 알아보기 편리합니다.

 - 프로그램이 단시간 내에 종료되기 때문에 클라이언트 4개가 모두 접속된 상태에서 서버가 시작되도록 구현하였습니다.
  따라서, 클라이언트의 연결 로그 시간은 모두 0분 0초입니다.
  
 - 사칙 연산 문제 중 0으로 나누는 문제가 출제되면,
  클라이언트에서는 -1을 반환하도록 하였고, 서버에서는 -1이면 정답으로 취급하고 새로운 문제를 출제하도록 하였습니다.

 - GitHub URL : https://github.com/jujuwon/random-calculator